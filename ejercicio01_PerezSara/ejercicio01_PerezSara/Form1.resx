<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf38/BLt/
        VR64glEvbJJRL26ZTB5VqlUDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3fFMrxIhZg9KP
        XMnXk1/43pZh/+KYYv95yG7/eMRr/3a8ZvhztGHJbqNXg2qUTSsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC6f1Y4zo1cvN+X
        Yf7snmX/7Z9m/+2fZv/tn2b/7Z9m/33Wdv991nb/fdZ2/33Wdv981XX/eMVs/nGuXrxtllE4AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACyf0wKx4hZl+CY
        Yf3tn2b/7Z9m/+2fZv/tn2b/7Z9m/+2fZv/tn2b/fdZ2/33Wdv991nb/fdZ2/33Wdv991nb/fdZ2/3jG
        bP1wpliYZplMCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvIRVG8+M
        W9DqnWX/7Z9m/+2fZv/tn2b/7Z9m/+2fZv/tn2b/7Z9m/+2fZv991nb/fdZ2/33Wdv991nb/fdZ2/33W
        dv991nb/fdZ2/3zTdP9zsF/QZ5dLGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKpn
        QhvMgVvc7J5l/+2fZv/tn2b/7Z9m/+2fZv/tn2b/7Z9m/+2fZv/tn2b/7Z9m/33Wdv991nb/fdZ2/33W
        dv991nb/fdZ2/33Wdv991nb/fdZ2/3zVdf9atJ3cJIi2HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACZZjMKwnJY0OeEbv/okGn+7Z9m/+2fZv/tn2b/7Z9m/+2fZv/tn2b/7Z9m/+2fZv/tn2b/fdZ2/33W
        dv991nb/fdZ2/33Wdv991nb/fdZ2/33Wdv991nb/ati3/lje/v88sNXQGX+yCgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALhtUpflg23/6IVv/+iFb//okGn+7Z9m/+2fZv/tn2b/7Z9m/+2fZv/tn2b/7Z9m/+2f
        Zv991nb/fdZ2/33Wdv991nb/fdZ2/33Wdv991nb/fdZ2/2rYt/5Z3///Wd///1bb/P80o8qXAAAAAAAA
        AAAAAAAAAAAAAAAAAACoZEg42Hxl/eiFb//ohW//6IVv/+iFb//okGn+7Z9m/+2fZv/tn2b/7Z9m/+2f
        Zv/tn2b/7Z9m/33Wdv991nb/fdZ2/33Wdv991nb/fdZ2/33Wdv9q2Lf+Wd///1nf//9Z3///Wd///0zL
        7f0kjbY4AAAAAAAAAAAAAAAAAAAAAMFxV7vohW//6IVv/+iFb//ohW//6IVv/+iFb//okGn+7Z9m/+2f
        Zv/tn2b/7Z9m/+2fZv/tn2b/fdZ2/33Wdv991nb/fdZ2/33Wdv991nb/ati3/lnf//9Z3///Wd///1nf
        //9Z3///Wd///zqt07wAAAAAAAAAAAAAAACmZEcr1nxk/uiFb//ohW//6IVv/+iFb//ohW//6IVv/+iF
        b//okGn+7Z9m/+2fZv/tn2b/7Z9m/+2fZv991nb/fdZ2/33Wdv991nb/fdZ2/2rYt/5Z3///Wd///1nf
        //9Z3///Wd///1nf//9Z3///TMns/iOOtysAAAAAAAAAALVrT4PnhG7/6IVv/+iFb//ohW//6IVv/+iF
        b//ohW//6IVv/+iFb//okGn+7Z9m/+2fZv/tn2b/7Z9m/33Wdv991nb/fdZ2/33Wdv9q2Lf+Wd///1nf
        //9Z3///Wd///1nf//9Z3///Wd///1nf//9Y3v7/MJ/GgwAAAAAAAAAAxnRayOiFb//ohW//6IVv/+iF
        b//ohW//6IVv/+iFb//ohW//6IVv/+iFb//okGn+7Z9m/+2fZv/tn2b/fdZ2/33Wdv991nb/ati3/lnf
        //9Z3///Wd///1nf//9Z3///Wd///1nf//9Z3///Wd///1nf//8/tdrJAAAAAKpVVQPNd1/46IVv/+iF
        b//ohW//6IVv/+iFb//ohW//6IVv/+iFb//ohW//6IVv/+iFb//okGn+7Z9m/+2fZv991nb/fdZ2/2rY
        t/5Z3///Wd///1nf//9Z3///Wd///1nf//9Z3///Wd///1nf//9Z3///Wd///0S+4vgAf38EqmZEHtV7
        ZP/ohW//6IVv/+iFb//ohW//6IVv/+iFb//ohW//6IVv/+iFb//ohW//6IVv/+iFb//okGn+7Z9m/33W
        dv9q2Lf+Wd///1nf//9Z3///Wd///1nf//9Z3///Wd///1nf//9Z3///Wd///1nf//9Z3///S8jr/yKQ
        ux6oYUYv2n5m/+iFb//ohW//6IVv/+iFb//ohW//6IVv/+iFb//ohW//6IVv/+iFb//ohW//6IVv/+iF
        b//okGn+ati3/lnf//9Z3///Wd///1nf//9Z3///Wd///1nf//9Z3///Wd///1nf//9Z3///Wd///1nf
        //9Oze//JY24L51cfC/UXaX/412w/+NdsP/jXbD/412w/+NdsP/jXbD/412w/+NdsP/jXbD/412w/+Nd
        sP/jXbD/412w/+FcxP5TdOz+SIrw/0iK8P9IivD/SIrw/0iK8P9IivD/SIrw/0iK8P9IivD/SIrw/0iK
        8P9IivD/SIrw/0WE5P87bLgvmV1/Hs9dof/jXbD/412w/+NdsP/jXbD/412w/+NdsP/jXbD/412w/+Nd
        sP/jXbD/412w/+NdsP/hXMT+413c/2Bg6/9TdOz+SIrw/0iK8P9IivD/SIrw/0iK8P9IivD/SIrw/0iK
        8P9IivD/SIrw/0iK8P9IivD/RYLg/ztuux5/Pz8Ex1yb+ONdsP/jXbD/412w/+NdsP/jXbD/412w/+Nd
        sP/jXbD/412w/+NdsP/jXbD/4VzE/uNd3P/jXdz/YGDr/2Bg6/9TdOz+SIrw/0iK8P9IivD/SIrw/0iK
        8P9IivD/SIrw/0iK8P9IivD/SIrw/0iK8P9Dftj4AFWqAwAAAAC+XJXJ412w/+NdsP/jXbD/412w/+Nd
        sP/jXbD/412w/+NdsP/jXbD/412w/+FcxP7jXdz/413c/+Nd3P9gYOv/YGDr/2Bg6/9TdOz+SIrw/0iK
        8P9IivD/SIrw/0iK8P9IivD/SIrw/0iK8P9IivD/SIrw/0F70skAAAAAAAAAAKtbiIPiXa//412w/+Nd
        sP/jXbD/412w/+NdsP/jXbD/412w/+NdsP/hXMT+413c/+Nd3P/jXdz/413c/2Bg6/9gYOv/YGDr/2Bg
        6/9TdOz+SIrw/0iK8P9IivD/SIrw/0iK8P9IivD/SIrw/0iK8P9Hie//QHLCgwAAAAAAAAAAnVt/KtBc
        ov7jXbD/412w/+NdsP/jXbD/412w/+NdsP/jXbD/4VzE/uNd3P/jXdz/413c/+Nd3P/jXdz/YGDr/2Bg
        6/9gYOv/YGDr/2Bg6/9TdOz+SIrw/0iK8P9IivD/SIrw/0iK8P9IivD/SIrw/0WC4f47arcrAAAAAAAA
        AAAAAAAAuVyRu+NdsP/jXbD/412w/+NdsP/jXbD/412w/+FcxP7jXdz/413c/+Nd3P/jXdz/413c/+Nd
        3P9gYOv/YGDr/2Bg6/9gYOv/YGDr/2Bg6/9TdOz+SIrw/0iK8P9IivD/SIrw/0iK8P9IivD/QXjOvAAA
        AAAAAAAAAAAAAAAAAACaW3o40lyk/eNdsP/jXbD/412w/+NdsP/hXMT+413c/+Nd3P/jXdz/413c/+Nd
        3P/jXdz/413c/2Bg6/9gYOv/YGDr/2Bg6/9gYOv/YGDr/2Bg6/9TdOz+SIrw/0iK8P9IivD/SIrw/0WD
        4v07bbY4AAAAAAAAAAAAAAAAAAAAAAAAAACvXIqX4F2t/+NdsP/jXbD/4VzE/uNd3P/jXdz/413c/+Nd
        3P/jXdz/413c/+Nd3P/jXdz/YGDr/2Bg6/9gYOv/YGDr/2Bg6/9gYOv/YGDr/2Bg6/9TdOz+SIrw/0iK
        8P9HiO3/P3PFmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJlMfwq7XJLP4l2v/+FcxP7jXdz/413c/+Nd
        3P/jXdz/413c/+Nd3P/jXdz/413c/+Nd3P9gYOv/YGDr/2Bg6/9gYOv/YGDr/2Bg6/9gYOv/YGDr/2Bg
        6/9TdOz+R4nv/0J5z9AzZrIKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKBeehu3VqXc4lzb/+Nd
        3P/jXdz/413c/+Nd3P/jXdz/413c/+Nd3P/jXdz/413c/2Bg6/9gYOv/YGDr/2Bg6/9gYOv/YGDr/2Bg
        6/9gYOv/YGDr/19f6v9GY9DcOHG8GwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIRC
        jRuqTrDQ3lzY/+Nd3P/jXdz/413c/+Nd3P/jXdz/413c/+Nd3P/jXdz/YGDr/2Bg6/9gYOv/YGDr/2Bg
        6/9gYOv/YGDr/2Bg6/9eXuj/SEjMzzg4sxsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAH8zfwqbS6OXy1bJ/eNd3P/jXdz/413c/+Nd3P/jXdz/413c/+Nd3P9gYOv/YGDr/2Bg
        6/9gYOv/YGDr/2Bg6/9gYOv/VVXd/UFBwpczM7IKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACERJE4qU+uu8lWyP7iXNv/413c/+Nd3P/jXdz/413c/2Bg
        6/9gYOv/YGDr/2Bg6/9fX+r/VVXc/kZGy7s2NrY4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgkGOK5VJn4OxULXIvFO9+MdW
        xv/OWMv/V1ff/1RU2/9PT9T4SkrOyUBAvoM1NbErAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABVVaoDf0SQHoJBjS82NrMvMzOyHgAAfwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//gf///AA///AAD//AAAP/gAAB/wAAAP4AAAB+AAAAfAAAADwAAAA4AA
        AAGAAAABgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGAAAABgAAAAcAAAAPAAAAD4AAAB+AA
        AAfwAAAP+AAAH/wAAD//AAD//8AD///4H/8=
</value>
  </data>
</root>